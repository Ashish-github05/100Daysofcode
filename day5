  Ques :-Remove Duplicates from Sorted Array 
  
 *** Given an integer array nums sorted in non-decreasing order,remove the duplicates in-place such that each unique element 
 appears only once. The relative order of the elements should be kept the same.
 

Constraints:
1 <= nums.length <= 3 * 104
-100 <= nums[i] <= 100
nums is sorted in non-decreasing order.

****CODE**** :-  
class Solution {
     public int removeDuplicates(int[] nums) {
    
        int x=1;
        
        for(int y=x ; y < nums.length; y++)
        {
            if(nums[y] > nums[x-1])
            {
                nums[x++]=nums[y];
            }
        }
        return x;
    }
}


SAMPLE TESTCASES-

1.
Input: nums = [1,1,2]
Output:nums = [1,2]

2.
Input: nums = [1,1,0]
Output: num must be in non decreasing order // wrong input

3.
Input: nums = []
Output: expected 'nums' to have 1 <= size <= 30000 but got 0


Example 1:
Input: nums = [1,1,2]
Output: nums = [1,2]
Explanation: Your function should return the first two elements of nums being 1 and 2 respectively.

Example 2:
Input: nums = [0,0,1,1,1,2,2,3,3,4]
Output: nums = [0,1,2,3,4]
Explanation: Your function should return the first five elements of nums being 0, 1, 2, 3, and 4 respectively.
 
Example 3:
Input: nums = [1,1,0]
Output: num must be in non decreasing order // wrong input
